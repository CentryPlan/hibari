####################
# leex
leexinc.hrl:49: The pattern <Rest, Line, {'token', T, Push}, Ts> can never match the type <_,_,'error' | 'skip_token' | {'end_token',{'dot',_}},[{atom(),_} | {'atom',_,atom()} | {'binary',_,binary()} | {'float',_,float()} | {'integer',_,_} | {'string',_,[any()]}]>
leexinc.hrl:54: The pattern <Rest, Line, {'end_token', T, Push}, Ts> can never match the type <_,_,'error' | 'skip_token',[{atom(),_} | {'atom',_,atom()} | {'binary',_,binary()} | {'float',_,float()} | {'integer',_,_} | {'string',_,[any()]}]>
leexinc.hrl:59: The pattern <Rest, Line, {'skip_token', Push}, Ts> can never match the type <_,_,'error',[{atom(),_} | {'atom',_,atom()} | {'binary',_,binary()} | {'float',_,float()} | {'integer',_,_} | {'string',_,[any()]}]>
leexinc.hrl:62: The pattern <_Rest, Line, {'error', S}, _Ts> can never match the type <_,_,'error',[{atom(),_} | {'atom',_,atom()} | {'binary',_,binary()} | {'float',_,float()} | {'integer',_,_} | {'string',_,[any()]}]>
leexinc.hrl:118: The pattern <Rest, Line, {'token', T, Push}> can never match the type <_,_,'error' | 'skip_token' | {'end_token',{'dot',_}}>
leexinc.hrl:123: The pattern <Rest, Line, {'end_token', T, Push}> can never match the type <_,_,'error' | 'skip_token'>
leexinc.hrl:128: The pattern <Rest, Line, {'skip_token', Push}> can never match the type <_,_,'error'>
leexinc.hrl:131: The pattern <Rest, Line, {'error', S}> can never match the type <_,_,'error'>
leexinc.hrl:192: The pattern <Rest, Line, {'token', T, Push}, Ts> can never match the type <_,_,'error' | 'skip_token' | {'end_token',{'dot',_}},_>
leexinc.hrl:197: The pattern <Rest, Line, {'end_token', T, Push}, Ts> can never match the type <_,_,'error' | 'skip_token',_>
leexinc.hrl:202: The pattern <Rest, Line, {'skip_token', Push}, Ts> can never match the type <_,_,'error',_>
leexinc.hrl:205: The pattern <Rest, Line, {'error', S}, _Ts> can never match the type <_,_,'error',_>
leexinc.hrl:243: The pattern <Rest, Line, {'token', _T, Push}, Error> can never match the type <_,_,'error' | 'skip_token' | {'end_token',{'dot',_}},_>
leexinc.hrl:248: The pattern <Rest, Line, {'end_token', _T, Push}, Error> can never match the type <_,_,'error' | 'skip_token',_>
leexinc.hrl:253: The pattern <Rest, Line, {'skip_token', Push}, Error> can never match the type <_,_,'error',_>
leexinc.hrl:256: The pattern <Rest, Line, {'error', _S}, Error> can never match the type <_,_,'error',_>
####################
# yecc
yeccpre.hrl:49: Function return_error/2 will never be called
####################
# mochiweb
mochiglobal.erl:33: Expression produces a value of type {'error','badfile' | 'native_code' | 'nofile' | 'not_purged' | 'on_load' | 'sticky_directory'} | {'module',atom()}, but this value is unmatched
mochiweb.erl:23: Expression produces a value of type 'ok' | {'error',_}, but this value is unmatched
mochiweb_http.erl:99: Expression produces a value of type 'ok' | {'error',_}, but this value is unmatched
mochiweb_http.erl:103: Expression produces a value of type 'ok' | {'error',_}, but this value is unmatched
mochiweb_http.erl:106: Expression produces a value of type 'ok' | {'error',_}, but this value is unmatched
mochiweb_http.erl:129: Expression produces a value of type 'ok' | {'error',_}, but this value is unmatched
mochiweb_http.erl:132: Expression produces a value of type 'ok' | {'error',_}, but this value is unmatched
mochiweb_http.erl:169: Expression produces a value of type 'ok' | {'error',_}, but this value is unmatched
mochiweb_request.erl:224: Expression produces a value of type 'ok' | {'mochiweb_response',_,_,_}, but this value is unmatched
mochiweb_request.erl:402: Expression produces a value of type [any()], but this value is unmatched
mochiweb_request.erl:501: Expression produces a value of type 'ok' | {'error',_}, but this value is unmatched
mochiweb_request.erl:504: Expression produces a value of type 'ok' | {'error',_}, but this value is unmatched
mochiweb_request.erl:518: Expression produces a value of type 'ok' | {'error',_}, but this value is unmatched
mochiweb_request.erl:530: Expression produces a value of type 'ok' | {'error',_}, but this value is unmatched
mochiweb_request.erl:615: Expression produces a value of type 'ok' | {'error',atom()}, but this value is unmatched
mochiweb_socket.erl:31: The pattern 'ok' can never match the type {'error',_} | {'ok',{'sslsocket',_,_}}
mochiweb_socket.erl:36: The pattern Err = {'error', _} can never match the type {'ok',{'sslsocket',_,_}}
mochiweb_socket_server.erl:120: Expression produces a value of type 'ok' | 'void' | {'error',_}, but this value is unmatched
mochiweb_socket_server.erl:122: Expression produces a value of type 'ok' | {'error',_}, but this value is unmatched
mochiweb_socket_server.erl:123: Expression produces a value of type 'ok' | {'error',_}, but this value is unmatched
reloader.erl:62: Expression produces a value of type ['error' | 'gone' | 'reload' | 'reload_but_test_failed' | 'unmodified'], but this value is unmatched
  fdsrv:bind_socket/2
  fdsrv:start/0
  fdsrv:stop/0
####################
# gdss-brick
brick_ets.erl:2940: The created fun has no local return
brick_mboxmon.erl:313: The created fun has no local return
brick_server.erl:5128: The created fun has no local return
####################
# gdss-admin
brick_chainmon.erl:1096: The created fun has no local return
