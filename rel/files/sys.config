%%% -*- mode: erlang -*-

[
 %%
 %% Kernel config
 %%
 {kernel,
  [{distributed, [{gdss_admin, 2000, ['hibari@127.0.0.1']}]},
   {sync_nodes_mandatory, []},
   {sync_nodes_optional, []},
   {sync_nodes_timeout, 123}
  ]
 },

 %%
 %% SASL config
 %%
 {sasl,
  [{sasl_error_logger, {file, "{{sasl_error_log}}"}},
   {errlog_type, error},
   {error_logger_mf_dir, "{{sasl_log_dir}}"},
   {error_logger_mf_maxbytes, 10485760},  % 10 MB max file size
   {error_logger_mf_maxfiles, 5}          % 5 files max
  ]},

 %%
 %% GMT-UTIL config
 %%
 {gmt_util,
  [{dtrace_support, false}]},

 %%
 %% Lagger config
 %%
 {lager,
  [%% What handlers to install with what arguments
   {handlers,
    [{lager_console_backend, info},
     {lager_file_backend,
      [{"log/error.log", error, 10485760, "$D0", 5},
       {"log/console.log", info, 10485760, "$D0", 5}
      ]}
    ]},
   %% Whether to write a crash log, and where. Undefined means no crash logger.
   {crash_log, "log/crash.log"},
   %% Maximum size in bytes of events in the crash log - defaults to 65536
   {crash_log_msg_size, 65536},
   %% Maximum size of the crash log in bytes, before its rotated, set
   %% to 0 to disable rotation - default is 0
   {crash_log_size, 10485760},
   %% What time to rotate the crash log - default is no time
   %% rotation. See the README for a description of this format.
   {crash_log_date, "$D0"},
   %% Number of rotated crash logs to keep, 0 means keep only the
   %% current one - default is 0
   {crash_log_count, 5},
   %% Whether to redirect error_logger messages into lager - defaults to true
   {error_logger_redirect, true}
  ]},

 %%
 %% Partition Detector
 %%
 {partition_detector,
  [{heartbeat_status_udp_port, 63099},
   {heartbeat_status_xmit_udp_port, 63100},
   {network_a_address, "127.0.0.1"},
   {network_a_broadcast_address, "127.0.0.1"},
   {network_a_tiebreaker, "127.0.0.1"},
   {network_b_address, "127.0.0.1"},
   {network_b_broadcast_address, "127.0.0.1"},
   {network_monitor_enable, true},
   {network_monitor_monitored_nodes, ['hibari@127.0.0.1']}
  ]},

 %%
 %% GDSS Brick config
 %%
 {gdss_brick,
  [{brick_default_data_dir, "{{gdss_data_dir}}"},
   {brick_do_op_too_old_timeout, 4500},
   {brick_max_log_size_mb, 300},
   {brick_min_log_size_mb, 100},
   {brick_scavenger_start_time, "3:00"},
   {brick_scavenger_temp_dir,"/tmp/hibari_scavenger"},
   {brick_scavenger_throttle_bytes, 2097152},
   {brick_skip_live_percentage_greater_than, 90},
   {brick_sync_interval_msec, 200},
   {brick_repair_max_bytes, 10485760},
   {brick_repair_max_primers, 1}
  ]},

 %%
 %% GDSS Admin config
 %%
 {gdss_admin,
  [{application_data_dir, "."},
   {brick_admin_conf_path, "root/conf/admin.conf"}
  ]},

 %%
 %% GDSS UBF Proto config
 %%
 {gdss_ubf_proto,
  [%% Hibari Thrift protocol server
   {gdss_tbf_tcp_port, 7600}
   , {gdss_tbf_maxconn, 10000}
   , {gdss_tbf_process_options, []}
   , {gdss_tbf_timeout, 60000}
   %% Hibari UBF protocol server
   , {gdss_ubf_tcp_port, 7581}
   , {gdss_ubf_maxconn, 10000}
   , {gdss_ubf_process_options, []}
   , {gdss_ubf_timeout, 60000}
   %% Hibari EBF protocol server
   , {gdss_ebf_tcp_port, 7580}
   , {gdss_ebf_maxconn, 10000}
   , {gdss_ebf_process_options, []}
   , {gdss_ebf_timeout, 60000}
   %% Hibari JSON-RPC protocol server
   %% (Disabled, Requires ../lib/ubf_jsonrpc)
   , {gdss_jsf_tcp_port,    0}  %% default: 7582
   , {gdss_jsf_maxconn, 10000}
   , {gdss_jsf_process_options, []}
   , {gdss_jsf_timeout, 60000}
  ]}

].
